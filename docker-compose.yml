version: '3.8'

networks:
  redisn:
    driver: bridge
    name: redisn

services:
  redis1:
    image: bitnami/redis:latest
    restart: always
    container_name: redis-server-1
    command: >
      /opt/bitnami/scripts/redis/run.sh --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --port 6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
      - "16379:16379"
    volumes:
      - redis_data_1:/bitnami/redis/data
    networks:
      - redisn

  redis2:
    image: bitnami/redis:latest
    restart: always
    container_name: redis-server-2
    command: >
      /opt/bitnami/scripts/redis/run.sh --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --port 6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6380:6379"
      - "16380:16379"
    volumes:
      - redis_data_2:/bitnami/redis/data
    networks:
      - redisn

  redis3:
    image: bitnami/redis:latest
    restart: always
    container_name: redis-server-3
    command: >
      /opt/bitnami/scripts/redis/run.sh --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --port 6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6381:6379"
      - "16381:16379"
    volumes:
      - redis_data_3:/bitnami/redis/data
    networks:
      - redisn

  redis-cluster-init:
    image: bitnami/redis:latest
    depends_on:
      - redis1
      - redis2
      - redis3
    networks:
      - redisn
    entrypoint: [
      "sh", "-c", 
      "sleep 10 && redis-cli --cluster create redis-server-1:6379 redis-server-2:6379 redis-server-3:6379 --cluster-replicas 0 --cluster-yes"
    ]

  redisinsight:
    image: redislabs/redisinsight:latest
    restart: always
    container_name: redis-insight
    volumes:
      - redis-insight:/data
    ports:
      - "5540:5540"
    networks:
      - redisn
    depends_on:
      - redis1
      - redis2
      - redis3

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - REDIS_NODES=redis-server-1:6379,redis-server-2:6379,redis-server-3:6379
    container_name: api-container
    ports:
      - "5001:5001"
    networks:
      - redisn
    depends_on:
      - redis1
      - redis2
      - redis3

  grpc-server:
    build:
      context: .
      dockerfile: Dockerfile.grpc
    container_name: grpc-server-container
    ports:
      - "50051:50051"
    networks:
      - redisn
    dns:
      - 8.8.8.8 

volumes:
  redis_data_1:
    driver: local
  redis_data_2:
    driver: local
  redis_data_3:
    driver: local
  redis-insight:
    driver: local
